/**
 * timeline
 * by Jerry
 */

'use strict'

const timeLineFn = (args, content) => {
  const yaml = require('js-yaml');

  var split = content.split('\n');
  let startParse=false
  let dataYml='';
  let strContext=''
  for (let splitKey in split) {
    if (split[splitKey].trim()==='<!-- timeline'){
      startParse=true
    } else if (split[splitKey]==='-->'){
      startParse=false
    } else if (startParse){
      dataYml+=split[splitKey]
      dataYml+="\n"
    } else if (split[splitKey].trim()==='<!-- endtimeline -->'){
      break;
    }else {
      strContext+=split[splitKey]
      dataYml+="\n"
    }
  }
  const data = yaml.load(dataYml);


  let result = ''
  let color = ''
  let text = ''
  if (args.length) {
    [text, color] = args.join(' ').split(',')
    const mdContent = hexo.render.renderSync({ text, engine: 'markdown' })
    result += `<div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'>${mdContent}</div></div></div>`
  }


  for (let i = 0; i < matches.length; i += 2) {
    const tlChildTitle = hexo.render.renderSync({ text: matches[i], engine: 'markdown' })
    const tlChildContent = hexo.render.renderSync({ text: matches[i + 1], engine: 'markdown' })

    const tlTitleHtml = `<div class='timeline-item-title'><div class='item-circle'>${tlChildTitle}</div></div>`
    const tlContentHtml = `<div class='timeline-item-content'>${tlChildContent}</div>`

    result += `<div class='timeline-item'>${tlTitleHtml + tlContentHtml}</div>`
  }

  return `<div class="timeline ${color}">${result}</div>`
}

hexo.extend.tag.register('timeline', timeLineFn, { ends: true })
